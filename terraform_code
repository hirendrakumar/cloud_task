provider "aws" {
    region = "ap-south-1"
    profile = "hirendra" 
}

variable "keyname" {
    default = "key2211"
}


resource "tls_private_key" "mykey" {
  algorithm = "RSA"
}

module "key_pair" {
  source = "terraform-aws-modules/key-pair/aws"

  key_name   = "key2211"
  public_key = tls_private_key.mykey.public_key_openssh
}
resource "aws_security_group" "secure" {
  name        = "myossecure"
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  egress {
    from_port = 0
    to_port   = 0
    protocol  = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "Security"
  }
}
 resource "aws_instance" "myOS" {
  ami           = "ami-09a7bbd08886aafdf"
  instance_type = "t2.micro"
  key_name = var.keyname
  security_groups = ["myossecure"]

  connection {
    type     = "ssh"
    user     = "ec2-user"
    private_key = "${tls_private_key.mykey.private_key_pem}"
    host     = aws_instance.myOS.public_ip
  }

  provisioner "remote-exec" {
    inline = [
      "sudo yum update -y",
      "sudo yum install httpd -y",
      "sudo yum install git -y",
      "sudo yum install php -y",
      "sudo systemctl restart httpd",
      "sudo systemctl enable httpd",
    ]
  }

  tags = {
    Name = "first_OS"
  }
} 

resource "aws_ebs_volume" "ebs1" {
  availability_zone = aws_instance.myOS.availability_zone
  size = 1
  tags = {
    Name = "ebsstroage"
  }
}
resource "aws_volume_attachment" "ebs_attachment" {
  device_name = "/dev/sdh"
  volume_id   = aws_ebs_volume.ebs1.id
  instance_id = aws_instance.myOS.id
  force_detach = true
}
resource "aws_s3_bucket" "my_bucket" {
  bucket = "hirendra-bucket"
  acl    = "public-read"

provisioner "local-exec" {
        command     = "git clone https://github.com/hirendrakumar/cloud_task.git  images"
   }

provisioner "local-exec" {
        when        =   destroy
        command     =   "echo Y | rmdir /s images"
    }    
  tags = {
    Name = "hirendra-bucket1234"
  }
}
locals {
  s3_origin_id = "s3_origin"
} 
resource "aws_s3_bucket_object" "object"{
  bucket = "hirendra-bucket"
  acl = "public-read"
  key = "vimal.jpeg"
  source = "C:/Users/hirendra/Downloads/images/vimal.jpeg"
  }

resource "aws_cloudfront_distribution" "cloudfront" {
  origin {
    domain_name = aws_s3_bucket.my_bucket.bucket_regional_domain_name
    origin_id   = local.s3_origin_id
  }
  
  enabled = true
  default_root_object = "vimal.jpeg"

  default_cache_behavior {
    allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
    cached_methods   = ["GET", "HEAD"]
    target_origin_id = local.s3_origin_id
    forwarded_values {
      query_string = false
      cookies {
        forward = "none"
      }
    }
    viewer_protocol_policy = "allow-all"
    min_ttl = 0
    default_ttl = 3600
    max_ttl = 86400
  }
  
  restrictions {
    geo_restriction {
      restriction_type = "none"
    }
  }

  # SSL certificate for the service.
  viewer_certificate {
    cloudfront_default_certificate = true
  }
}

resource "null_resource" "nullremote" {
  depends_on = [aws_volume_attachment.ebs_attachment]
  connection {
    type = "ssh"
    user = "ec2-user"
    private_key = "${tls_private_key.mykey.private_key_pem}"
    host = aws_instance.myOS.public_ip
  }
  
  provisioner "remote-exec" {
    inline = [
      "sudo mkfs.ext4  /dev/xvdh",
      "sudo mount  /dev/xvdh  /var/www/html",
      "sudo rm -rf /var/www/html/*",
      "sudo git clone https://github.com/hirendrakumar/cloud_task.git  /var/www/html/index.html",
      "sudo su << EOF",
            "echo \"<img src=\"https://\"${aws_cloudfront_distribution.cloudfront.domain_name}\"/vimal.jpeg\">\" >> /var/www/html/index.html",
            "EOF",
      "sudo systemctl restart httpd",      
    ]
  }
}
resource "null_resource" "local1"  {
  depends_on = [
    null_resource.nullremote,
  ]

  provisioner "local-exec" {
    command = "start chrome  ${aws_instance.myOS.public_ip}"
  }
}


